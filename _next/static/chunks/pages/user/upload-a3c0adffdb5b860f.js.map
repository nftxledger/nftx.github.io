{"version":3,"file":"static/chunks/pages/user/upload-a3c0adffdb5b860f.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js","webpack://_N_E/./src/components/carbon/Container/index.tsx","webpack://_N_E/./src/components/ledger/Upload.tsx","webpack://_N_E/./src/pages/user/upload.tsx","webpack://_N_E/?a5d0","webpack://_N_E/<anon>"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import \"./Container.module.scss\";\n\nexport default function Container({ ...props }: any) {\n  return (\n    <div\n      className=\"page-container\"\n      style={{ paddingLeft: \"calc(25% + 1.5rem)\", paddingRight: \"2rem\" }}\n      {...props}\n    >\n      <h1>{props.title}</h1>\n      {props.children}\n    </div>\n  );\n}\n","import { connect } from \"react-redux\";\nimport { AuthState } from \"@/src/redux/auth.slice\";\nimport { uploadWasmSlice, uploadFile } from \"@/src/redux/upload.slice\";\nimport {\n  Button,\n  DataTable,\n  //@ts-ignore\n  FileUploaderButton,\n  Table,\n  TableBatchAction,\n  TableBatchActions,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableHeader,\n  TableRow,\n  TableSelectAll,\n  TableSelectRow,\n  TableToolbar,\n  TableToolbarAction,\n  TableToolbarContent,\n  TableToolbarMenu,\n  TableToolbarSearch,\n  //@ts-ignore\n  CheckboxGroup,\n  Checkbox,\n  Toggle,\n  Toggletip,\n  ToggletipButton,\n  ToggletipContent,\n  ToggletipActions,\n  //@ts-ignore\n  InlineLoading,\n  TableExpandRow,\n  TableExpandHeader,\n  TableExpandedRow,\n} from \"@carbon/react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport {\n  Add as AddIcon,\n  TrashCan as TrashCanIcon,\n  Information as InformationIcon,\n  Upload as UploadIcon,\n  CheckmarkOutline as CheckmarkOutlineIcon,\n  //@ts-ignore\n} from \"@carbon/icons-react\";\nimport Link from \"next/link\";\n\nfunction uploadButtonHandler() {\n  //dispatch(uploadFile());\n  console.log(\"upload button clicked\");\n}\n\nconst files = (acceptedFiles: any) => {\n  //@ts-ignore\n  window.storedFiles = acceptedFiles; // TODO: this is a hack\n  return acceptedFiles.map((file: any) => {\n    return (\n      <li key={file.path}>\n        {file.path} - {file.size} bytes\n      </li>\n    );\n  });\n};\n\nconst rejectedFiles = (fileRejections: any) => {\n  return fileRejections.map(({ file, errors }: any) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n      <ul>\n        {errors.map((e: any) => (\n          <li key={e.code}>{e.message}</li>\n        ))}\n      </ul>\n    </li>\n  ));\n};\n\nfunction UploadForm({ authState, addUpload, uploadList, uploadFile }: any) {\n  const { acceptedFiles, getRootProps, getInputProps, fileRejections } =\n    useDropzone({\n      accept: {\n        \"application/wasm\": [\".wasm\"],\n      },\n      maxFiles: 100,\n      maxSize: 10000000,\n      minSize: 1,\n    });\n\n  useEffect(() => {\n    console.log(acceptedFiles);\n    acceptedFiles.forEach((file: any) => {\n      let item = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified,\n      };\n      addUpload(item);\n    });\n  }, [acceptedFiles, addUpload]);\n\n  console.log(uploadList.length);\n\n  return (\n    <>\n      <section className=\"container\">\n        <div\n          {...getRootProps({\n            className: \"dropzone cds--file-container cds--file-container--drop\",\n          })}\n        >\n          <input id=\"ha\" {...getInputProps()} />\n          <p>Drag n drop some files here, or click to select files</p>\n        </div>\n        <aside>\n          <h4>Accepted Files</h4>\n          <ul>{files(acceptedFiles)}</ul>\n        </aside>\n        <aside>\n          <h4>Rejected Files</h4>\n          <ul>{rejectedFiles(fileRejections)}</ul>\n        </aside>\n        <Button\n          disabled={authState != AuthState.SIGNED_IN}\n          onClick={uploadFile}\n        >\n          Upload\n        </Button>\n      </section>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  authState: state.auth.authState,\n  uploadList: state.uploadWasm.uploadList,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  addUpload: (file: any) => dispatch(uploadWasmSlice.actions.addUpload(file)),\n  uploadFile: () => dispatch(uploadFile()),\n});\n\n// a re-implementation that uses carbon FileUploader\nfunction UploadForm2({\n  authState,\n  addUpload,\n  removeUpload,\n  uploadList,\n  uploadFile,\n}: any) {\n  const files: Array<File> = [];\n  const headers = [\n    {\n      id: \"name\",\n      header: \"File Name\",\n      key: \"name\",\n    },\n    {\n      id: \"size\",\n      header: \"Size\",\n      key: \"size\",\n    },\n    {\n      id: \"status\",\n      header: \"Status\",\n      key: \"status\",\n    },\n  ];\n\n  const [rows, setRows]: any = useState([]);\n  useEffect(() => {\n    const trows: any = [];\n    uploadList.forEach((file: any, i: any) => {\n      // how to get the index in a forEach loop?\n      // answer: use a for loop\n      trows.push({\n        id: i + \"#\" + file.name,\n        name: file.name,\n        size: file.size,\n        status: \"Accepted\",\n      });\n    });\n    setRows(trows);\n  }, [uploadList]);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.files) return;\n    for (let i = 0; i < event.target.files.length; i++) {\n      let file = event.target.files.item(i);\n      if (!file) continue;\n      files.push(file);\n      addUpload(file);\n    }\n  };\n\n  return (\n    <>\n      <DataTable headers={headers} rows={rows}>\n        {({\n          rows,\n          headers,\n          getTableProps,\n          getHeaderProps,\n          getRowProps,\n          getSelectionProps,\n          getBatchActionProps,\n          onInputChange,\n          selectedRows,\n        }: any) => {\n          const batchActionProps = getBatchActionProps();\n          return (\n            <TableContainer\n              title=\"Upload Files\"\n              description=\"You can use this form to upload WASM Artifacts.\"\n            >\n              <TableToolbar>\n                <TableBatchActions {...batchActionProps}>\n                  <TableBatchAction\n                    tabIndex={batchActionProps.shouldShowBatchActions ? 0 : -1}\n                    renderIcon={TrashCanIcon}\n                    onClick={(e: any) => {\n                      console.log(selectedRows);\n                      // the id is the number before the # in the id field\n                      // and converted to a number\n                      const ids = selectedRows.map((row: any) => {\n                        return row.id.split(\"#\")[0];\n                      });\n                      removeUpload(ids);\n                      console.log(ids);\n                    }}\n                  >\n                    Delete\n                  </TableBatchAction>\n                </TableBatchActions>\n                <TableToolbarContent>\n                  <TableToolbarSearch onChange={onInputChange} />\n\n                  <FileUploaderButton\n                    accept={[\".wasm\"]}\n                    buttonKind=\"primary\"\n                    labelText=\"Add files\"\n                    multiple\n                    disableLabelChanges={true}\n                    onChange={onChange}\n                    size=\"lg\"\n                  />\n                </TableToolbarContent>\n              </TableToolbar>\n\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    <TableExpandHeader />\n                    <TableSelectAll {...getSelectionProps()} />\n                    {headers.map((header: any) => (\n                      <React.Fragment key={header.id}>\n                        <TableHeader\n                          {...getHeaderProps({ header, isSortable: true })}\n                        >\n                          {header.header}\n                        </TableHeader>\n                      </React.Fragment>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.length == 0 && (\n                    <TableRow>\n                      <TableExpandHeader />\n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>No Files</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  )}\n                  {rows.map((row: any) => (\n                    <React.Fragment key={row.id}>\n                      <TableExpandRow {...getRowProps({ row })}>\n                        <TableSelectRow {...getSelectionProps({ row })} />\n                        {row.cells.map((cell: any) => {\n                          if (cell.info.header === \"status\") {\n                            return (\n                              <TableCell key={cell.id}>\n                                <InlineLoading\n                                  status=\"finished\"\n                                  iconDescription=\"Loading\"\n                                  description=\"Accepted\"\n                                />\n                              </TableCell>\n                            );\n                          } else {\n                            return (\n                              <TableCell key={cell.id}>{cell.value}</TableCell>\n                            );\n                          }\n                        })}\n                      </TableExpandRow>\n                      <TableExpandedRow\n                        colSpan={headers.length + 2}\n                        className=\"demo-expanded-td\"\n                      >\n                        <h6>Uploaded Artifact details</h6>\n                        <div>\n                          <strong>Hash: </strong> Q13453431123\n                        </div>\n                        <div>\n                          <strong>Link: </strong> https://ipfs.io/dfdfd\n                        </div>\n                      </TableExpandedRow>\n                    </React.Fragment>\n                  ))}\n                </TableBody>\n              </Table>\n              <TableToolbar>\n                <TableToolbarContent\n                  style={{\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    paddingLeft: \"1rem\",\n                    // add padding for child elements using flexbox. use the\n                    // property for that\n                    gap: \"1rem\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      gap: \"0.25rem\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Toggle\n                      size=\"sm\"\n                      labelText=\"\"\n                      labelA=\"Publish to IPFS\"\n                      labelB=\"Publish to IPFS\"\n                      defaultToggled\n                      disabled={true}\n                      id=\"toggle-ipfs\"\n                      onClick={() => {}}\n                    />\n                    <Toggletip>\n                      <ToggletipButton label=\"Show information\">\n                        <InformationIcon />\n                      </ToggletipButton>\n                      <ToggletipContent>\n                        <p>Upload the WASM artifacts to IPFS.</p>\n                        <ToggletipActions>\n                          <Link href=\"custom-link\" target=\"_blank\">\n                            Learn More\n                          </Link>\n                        </ToggletipActions>\n                      </ToggletipContent>\n                    </Toggletip>\n                  </div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      gap: \"0.25rem\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Toggle\n                      size=\"sm\"\n                      labelText=\"\"\n                      labelA=\"Publish to Ledger\"\n                      labelB=\"Publish to Ledger\"\n                      defaultToggled={false}\n                      id=\"toggle-ledger\"\n                      onClick={() => {}}\n                    />\n                    <Toggletip>\n                      <ToggletipButton label=\"Show information\">\n                        <InformationIcon />\n                      </ToggletipButton>\n                      <ToggletipContent>\n                        <p>Upload the WASM artifacts to IPFS.</p>\n                        <ToggletipActions>\n                          <Link href=\"custom-link\" target=\"_blank\">\n                            Learn More\n                          </Link>\n                        </ToggletipActions>\n                      </ToggletipContent>\n                    </Toggletip>\n                  </div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      gap: \"0.25rem\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Toggle\n                      size=\"sm\"\n                      labelText=\"\"\n                      labelA=\"Publish to R2 Edge\"\n                      labelB=\"Publish to R2 Edge\"\n                      defaultToggled={false}\n                      id=\"toggle-r2\"\n                      onClick={() => {}}\n                    />\n                    <Toggletip>\n                      <ToggletipButton label=\"Show information\">\n                        <InformationIcon />\n                      </ToggletipButton>\n                      <ToggletipContent>\n                        <p>Upload the WASM artifacts to IPFS.</p>\n                        <ToggletipActions>\n                          <Link href=\"custom-link\" target=\"_blank\">\n                            Learn More\n                          </Link>\n                        </ToggletipActions>\n                      </ToggletipContent>\n                    </Toggletip>\n                  </div>\n                </TableToolbarContent>\n                <TableToolbarContent>\n                  <Button\n                    kind=\"primary\"\n                    onClick={uploadFile}\n                    disabled={selectedRows.length == 0}\n                    renderIcon={UploadIcon}\n                  >\n                    Upload\n                  </Button>\n                </TableToolbarContent>\n              </TableToolbar>\n            </TableContainer>\n          );\n        }}\n      </DataTable>\n    </>\n  );\n}\n\nconst mapStateToProps2 = (state: any) => ({\n  authState: state.auth.authState,\n  uploadList: state.uploadWasm.uploadList,\n});\n\nconst mapDispatchToProps2 = (dispatch: any) => ({\n  addUpload: (file: any) => dispatch(uploadWasmSlice.actions.addUpload(file)),\n  removeUpload: (file: any) =>\n    dispatch(uploadWasmSlice.actions.removeUpload(file)),\n  uploadFile: () => dispatch(uploadFile()),\n});\n\nexport default connect(mapStateToProps2, mapDispatchToProps2)(UploadForm2);\n","import Head from \"next/head\";\nimport UploadForm from \"@/src/components/ledger/Upload\";\nimport { Button } from \"@carbon/react\";\nimport Container from \"@/src/components/carbon/Container\";\n\nexport default function Upload() {\n  return (\n    <>\n      <Head>\n        <title>NFTxLedger - Upload WASM NFT</title>\n        <meta name=\"description\" content=\"Upload WASM NFT\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <Container title=\"Upload Artifact\">\n        <div>\n          <UploadForm />\n        </div>\n      </Container>\n    </>\n  );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/user/upload\",\n      function () {\n        return require(\"private-next-pages/user/upload.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/user/upload\"])\n      });\n    }\n  "],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","Container","_ref","props","jsx_runtime","jsxs","_objectSpread","className","style","paddingLeft","paddingRight","children","jsx","title","Upload","connect","state","authState","auth","uploadList","uploadWasm","dispatch","addUpload","file","uploadWasmSlice","actions","removeUpload","uploadFile","_ref3","files","_useState","useState","rows","setRows","useEffect","trows","forEach","push","id","name","size","status","onChange","event","item","Fragment","react_es","wQF","headers","header","_ref4","getTableProps","getHeaderProps","getRowProps","getSelectionProps","getBatchActionProps","onInputChange","selectedRows","batchActionProps","xJi","description","fjU","iG6","$oH","tabIndex","shouldShowBatchActions","renderIcon","TrashCanIcon","onClick","e","console","log","ids","map","row","split","Vj0","Ys1","OQ_","accept","buttonKind","labelText","multiple","disableLabelChanges","iA_","ssF","SCH","MOD","elY","react","xDH","isSortable","RMI","pj1","RcE","wix","cells","cell","info","lSo","iconDescription","value","WdL","colSpan","alignItems","justifyContent","gap","display","ZDl","labelA","labelB","defaultToggled","disabled","PTL","WBZ","label","bucket_8","d","Uwv","E$V","link_default","href","zxk","kind","UploadIcon","head_default","content","rel","Z","window","__NEXT_P","__webpack_require__"],"sourceRoot":""}