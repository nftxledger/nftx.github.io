{"version":3,"file":"static/chunks/pages/upload-1524739d705507ea.js","mappings":"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","sources":["webpack://_N_E/./src/components/ledger/Upload.tsx","webpack://_N_E/./src/pages/upload.tsx","webpack://_N_E/?aa4b","webpack://_N_E/<anon>"],"sourcesContent":["import { connect } from \"react-redux\";\nimport { AuthState } from \"@/src/redux/auth.slice\";\nimport { uploadWasmSlice, uploadFile } from \"@/src/redux/upload.slice\";\nimport { Button } from \"@carbon/react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport { useEffect } from \"react\";\n\nfunction uploadButtonHandler() {\n  //dispatch(uploadFile());\n  console.log(\"upload button clicked\");\n}\n\nconst files = (acceptedFiles: any) => {\n  //@ts-ignore\n  window.storedFiles = acceptedFiles; // TODO: this is a hack\n  return acceptedFiles.map((file: any) => {\n    return (\n      <li key={file.path}>\n        {file.path} - {file.size} bytes\n      </li>\n    );\n  });\n};\n\nconst rejectedFiles = (fileRejections: any) => {\n  return fileRejections.map(({ file, errors }: any) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n      <ul>\n        {errors.map((e: any) => (\n          <li key={e.code}>{e.message}</li>\n        ))}\n      </ul>\n    </li>\n  ));\n};\n\nfunction UploadForm({ authState, addUpload, uploadList, uploadFile }: any) {\n  const { acceptedFiles, getRootProps, getInputProps, fileRejections } =\n    useDropzone({\n      accept: {\n        \"application/wasm\": [\".wasm\"],\n      },\n      maxFiles: 100,\n      maxSize: 10000000,\n      minSize: 1,\n    });\n\n  useEffect(() => {\n    console.log(acceptedFiles);\n    acceptedFiles.forEach((file: any) => {\n      let item = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified,\n      };\n      addUpload(item);\n    });\n  }, [acceptedFiles, addUpload]);\n\n  console.log(uploadList.length);\n\n  return (\n    <>\n      <section className=\"container\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input id=\"ha\" {...getInputProps()} />\n          <p>Drag n drop some files here, or click to select files</p>\n        </div>\n        <aside>\n          <h4>Accepted Files</h4>\n          <ul>{files(acceptedFiles)}</ul>\n        </aside>\n        <aside>\n          <h4>Rejected Files</h4>\n          <ul>{rejectedFiles(fileRejections)}</ul>\n        </aside>\n        <Button\n          disabled={authState != AuthState.SIGNED_IN}\n          onClick={uploadFile}\n        >\n          Upload\n        </Button>\n      </section>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  authState: state.auth.authState,\n  uploadList: state.uploadWasm.uploadList,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  addUpload: (file: any) => dispatch(uploadWasmSlice.actions.addUpload(file)),\n  uploadFile: () => dispatch(uploadFile()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadForm);\n","import Head from \"next/head\";\nimport UploadForm from \"@/src/components/ledger/Upload\";\nimport { Button } from \"@carbon/react\";\n\nexport default function Upload() {\n  return (\n    <>\n      <Head>\n        <title>NFTxLedger - Upload WASM NFT</title>\n        <meta name=\"description\" content=\"Upload WASM NFT\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <main>\n        <div>upload WASM artifact</div>\n        <div>note: max size is 10Mb</div>\n        <UploadForm />\n      </main>\n    </>\n  );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/upload\",\n      function () {\n        return require(\"private-next-pages/upload.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/upload\"])\n      });\n    }\n  "],"names":["Upload","connect","state","authState","auth","uploadList","uploadWasm","dispatch","addUpload","file","uploadWasmSlice","actions","uploadFile","_ref2","_useDropzone","useDropzone","accept","maxFiles","maxSize","minSize","acceptedFiles","getRootProps","getInputProps","fileRejections","useEffect","console","log","forEach","name","size","type","lastModified","length","jsx_runtime","jsx","Fragment","children","jsxs","className","_objectSpread","id","window","storedFiles","map","path","_ref","errors","e","message","code","react_es","zxk","disabled","AuthState","SIGNED_IN","onClick","head_default","content","rel","href","__NEXT_P","push","__webpack_require__"],"sourceRoot":""}